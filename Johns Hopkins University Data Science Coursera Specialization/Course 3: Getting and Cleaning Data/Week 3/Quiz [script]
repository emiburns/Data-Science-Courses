#QUIZ RESPONSE SCRIPT SETUP

library(RCurl)
library(jpeg)
library(Hmisc)
library(reshape2)
library(tidyverse)

#wd set to desired directory location of consequent file downloads but, if not
#previously set, include full path name when retrieving / reading files

###################################
###################################

#QUESTION 1

url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
csv <- download.file(url, "q1data.csv", method = "curl")
data <- read.csv("q1data.csv") 
head(data)

agricultureLogical <- ifelse(data$ACR == 3 & data$AGS == 6, TRUE, FALSE)
which(agricultureLogical)[1:3]

###################################
###################################

#QUESTION 2

jpeg <- "https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg"
download.file(jpeg, "jeffpic.jpg", method = "curl")
img <- readJPEG("jeffpic.jpg", native = TRUE)
quantiles <- cut2(img, quantile(img, c(.30, .80)))
quantiles

###################################
###################################

#QUESTION 3

#loading gdp dataset (csv)
gdp_url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
gdp_csv <- download.file(gdp_url, "gdpdata.csv", method = "curl")
gdp <- read.csv("gdpdata.csv", skip =4, stringsAsFactors = FALSE)
head(gdp)
names(gdp)

#cleaning gdp dataset 
gdp <- gdp[1:190, -c(3, 6:10)]
colnames(gdp) <- c("ID", "Rank", "Economy", "GDP")
head(gdp)

#loading education dataset (csv)
edu_url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"
edu_csv <- download.file(edu_url, "edudata.csv", method = "curl")
edu <- read.csv("edudata.csv", stringsAsFactors = FALSE)
head(edu)

#renaming "CountryCode" col name to "ID"
colnames(edu)[colnames(edu) == "CountryCode"] <- "ID"
names(edu)

#merging datasets along common col index
intersect(names(gdp), names(edu)) #confirming "ID is overlapping variable name
df <- merge(gdp, edu)
head(df)

#number of matching ID's
length(df$ID)

#sorting data by descending order & selecting country in 13th row
sorted_df <- dplyr::arrange(tbl_df(df), desc(as.numeric(Rank)))
sorted_df[13, 3]

###################################
###################################

#QUESTION 4

spread_df <- tidyr::spread(sorted_df, Income.Group, Rank)
mean(as.numeric(spread_df$`High income: nonOECD`), na.rm = T)
mean(as.numeric(spread_df$`High income: OECD`), na.rm = T)


###################################
###################################

#QUESTION 5

df$Rank <- cut2(as.numeric(df$Rank), g = 5)
quant_table <- table(df$Rank, df$Income.Group)
colnames(quant_table)
quant_table[colnames(quant_table) == "Lower middle income" , 1]
